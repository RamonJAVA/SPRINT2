-- MySQL Script generated by MySQL Workbench
-- Tue Jul 30 12:41:10 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema spotify
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema spotify
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `spotify` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `spotify` ;

-- -----------------------------------------------------
-- Table `spotify`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`user` (
  `id_User` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `birthday` DATE NULL,
  `gender` ENUM('') NULL,
  `country` VARCHAR(45) NULL,
  `postal_code` VARCHAR(6) NULL,
  PRIMARY KEY (`id_User`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`payments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`payments` (
  `id_Payments` INT NOT NULL AUTO_INCREMENT,
  `date` DATE NOT NULL,
  `number` INT NOT NULL,
  `total_payments` INT NOT NULL,
  PRIMARY KEY (`id_Payments`),
  UNIQUE INDEX `number_UNIQUE` (`number` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`premiumUser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`premiumUser` (
  `id_User` INT NOT NULL,
  `id_PremiumUser` INT NOT NULL AUTO_INCREMENT,
  `start_subscription` DATE NOT NULL,
  `renewal` DATE NOT NULL,
  `method_of_payment` ENUM('credit card', 'paypal') NULL,
  `payments_id_Payments` INT NOT NULL,
  PRIMARY KEY (`id_User`, `payments_id_Payments`),
  INDEX `fk_premiumUser_payments1_idx` (`payments_id_Payments` ASC) VISIBLE,
  CONSTRAINT `id_User`
    FOREIGN KEY (`id_User`)
    REFERENCES `spotify`.`user` (`id_User`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_premiumUser_payments1`
    FOREIGN KEY (`payments_id_Payments`)
    REFERENCES `spotify`.`payments` (`id_Payments`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`credit_card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`credit_card` (
  `number` VARCHAR(16) NOT NULL,
  `expiry_date` DATE NOT NULL,
  `security_code` VARCHAR(3) NOT NULL,
  `premium_user` INT NOT NULL,
  INDEX `user_idx` (`premium_user` ASC) VISIBLE,
  CONSTRAINT `user`
    FOREIGN KEY (`premium_user`)
    REFERENCES `spotify`.`premiumUser` (`id_User`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`paypal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`paypal` (
  `paypal_username` VARCHAR(45) NOT NULL,
  `premium_user` INT NOT NULL,
  INDEX `user_idx` (`premium_user` ASC) VISIBLE,
  CONSTRAINT `user`
    FOREIGN KEY (`premium_user`)
    REFERENCES `spotify`.`premiumUser` (`id_User`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`playlist` (
  `id_Playlist` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `number_of_songs` INT NOT NULL,
  `creation_date` DATE NOT NULL,
  `user_id_User` INT NOT NULL,
  `state` ENUM('active', 'deletetd') NOT NULL,
  `elimination_date` DATE NOT NULL,
  PRIMARY KEY (`id_Playlist`),
  INDEX `fk_playlist_user1_idx` (`user_id_User` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_user1`
    FOREIGN KEY (`user_id_User`)
    REFERENCES `spotify`.`user` (`id_User`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`artist` (
  `id_Artist` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `picture` BLOB NULL,
  `similar_artists` INT NOT NULL,
  PRIMARY KEY (`id_Artist`),
  INDEX `similar_artists_idx` (`similar_artists` ASC) VISIBLE,
  CONSTRAINT `similar_artists`
    FOREIGN KEY (`similar_artists`)
    REFERENCES `spotify`.`artist` (`id_Artist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`album` (
  `id_Album` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `publication` DATE NOT NULL,
  `cover` BLOB NULL,
  `artist_id_Artist` INT NOT NULL,
  PRIMARY KEY (`id_Album`),
  INDEX `fk_album_artist1_idx` (`artist_id_Artist` ASC) VISIBLE,
  CONSTRAINT `fk_album_artist1`
    FOREIGN KEY (`artist_id_Artist`)
    REFERENCES `spotify`.`artist` (`id_Artist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`song`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`song` (
  `id_Song` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `length` TIME NOT NULL,
  `times_played` INT NOT NULL,
  `album_id_Album` INT NOT NULL,
  PRIMARY KEY (`id_Song`),
  INDEX `fk_song_album1_idx` (`album_id_Album` ASC) VISIBLE,
  CONSTRAINT `fk_song_album1`
    FOREIGN KEY (`album_id_Album`)
    REFERENCES `spotify`.`album` (`id_Album`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`add_song`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`add_song` (
  `user_id_User` INT NOT NULL,
  `playlist_id_Playlist` INT NOT NULL,
  `song_id_Song` INT NOT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`user_id_User`, `playlist_id_Playlist`),
  INDEX `fk_user_has_playlist_playlist1_idx` (`playlist_id_Playlist` ASC) VISIBLE,
  INDEX `fk_user_has_playlist_user1_idx` (`user_id_User` ASC) VISIBLE,
  INDEX `fk_add_song_song1_idx` (`song_id_Song` ASC) VISIBLE,
  CONSTRAINT `fk_user_has_playlist_user1`
    FOREIGN KEY (`user_id_User`)
    REFERENCES `spotify`.`user` (`id_User`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_playlist_playlist1`
    FOREIGN KEY (`playlist_id_Playlist`)
    REFERENCES `spotify`.`playlist` (`id_Playlist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_add_song_song1`
    FOREIGN KEY (`song_id_Song`)
    REFERENCES `spotify`.`song` (`id_Song`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `spotify`.`favorites`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `spotify`.`favorites` (
  `user` INT NOT NULL,
  `artist_id_Artist` INT NOT NULL,
  `album_id_Album` INT NOT NULL,
  `song_id_Song` INT NOT NULL,
  INDEX `user_idx` (`user` ASC) VISIBLE,
  INDEX `fk_favorites_artist1_idx` (`artist_id_Artist` ASC) VISIBLE,
  INDEX `fk_favorites_album1_idx` (`album_id_Album` ASC) VISIBLE,
  INDEX `fk_favorites_song1_idx` (`song_id_Song` ASC) VISIBLE,
  CONSTRAINT `user`
    FOREIGN KEY (`user`)
    REFERENCES `spotify`.`user` (`id_User`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorites_artist1`
    FOREIGN KEY (`artist_id_Artist`)
    REFERENCES `spotify`.`artist` (`id_Artist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorites_album1`
    FOREIGN KEY (`album_id_Album`)
    REFERENCES `spotify`.`album` (`id_Album`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_favorites_song1`
    FOREIGN KEY (`song_id_Song`)
    REFERENCES `spotify`.`song` (`id_Song`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
