-- MySQL Script generated by MySQL Workbench
-- Tue Jul 30 12:29:37 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `youtube` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `youtube` ;

-- -----------------------------------------------------
-- Table `youtube`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`user` (
  `id_User` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `birth_date` DATE NULL,
  `gender` ENUM('') NULL,
  `country` VARCHAR(45) NULL,
  `postal_code` VARCHAR(6) NULL,
  PRIMARY KEY (`id_User`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`channel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`channel` (
  `id_Channel` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  `creation_date` DATE NOT NULL,
  `user_id_User` INT NOT NULL,
  PRIMARY KEY (`id_Channel`, `user_id_User`),
  INDEX `fk_channel_user1_idx` (`user_id_User` ASC) VISIBLE,
  CONSTRAINT `fk_channel_user1`
    FOREIGN KEY (`user_id_User`)
    REFERENCES `youtube`.`user` (`id_User`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`like/dislike`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`like/dislike` (
  `id_Reaction` INT NOT NULL AUTO_INCREMENT,
  `date` DATETIME NOT NULL,
  `user` INT NOT NULL,
  PRIMARY KEY (`id_Reaction`),
  INDEX `user_idx` (`user` ASC) VISIBLE,
  CONSTRAINT `user`
    FOREIGN KEY (`user`)
    REFERENCES `youtube`.`user` (`id_User`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`video` (
  `id_Video` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  `size` VARCHAR(45) NOT NULL,
  `file_name` VARCHAR(45) NOT NULL,
  `length` VARCHAR(45) NOT NULL,
  `thumbnail` VARCHAR(45) NOT NULL,
  `views` VARCHAR(45) NOT NULL,
  `state` ENUM("public", "private", "hidden") NOT NULL,
  `user` VARCHAR(45) NOT NULL,
  `upload_date` DATE NOT NULL,
  `channel_id_Channel` INT NOT NULL,
  `comments` INT NOT NULL,
  `likes` INT NOT NULL,
  `dislikes` INT NOT NULL,
  `like/dislike_id_Reaction` INT NOT NULL,
  PRIMARY KEY (`id_Video`),
  INDEX `fk_video_channel1_idx` (`channel_id_Channel` ASC) VISIBLE,
  INDEX `fk_video_like/dislike1_idx` (`like/dislike_id_Reaction` ASC) VISIBLE,
  CONSTRAINT `fk_video_channel1`
    FOREIGN KEY (`channel_id_Channel`)
    REFERENCES `youtube`.`channel` (`id_Channel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_like/dislike1`
    FOREIGN KEY (`like/dislike_id_Reaction`)
    REFERENCES `youtube`.`like/dislike` (`id_Reaction`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`tag` (
  `id_Tag` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `video_id` INT NOT NULL,
  PRIMARY KEY (`id_Tag`),
  INDEX `videoid_idx` (`video_id` ASC) VISIBLE,
  CONSTRAINT `videoid`
    FOREIGN KEY (`video_id`)
    REFERENCES `youtube`.`video` (`id_Video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`subscription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`subscription` (
  `user_id_User` INT NOT NULL,
  `channel_id_Channel` INT NOT NULL,
  PRIMARY KEY (`user_id_User`, `channel_id_Channel`),
  INDEX `fk_user_has_channel_channel1_idx` (`channel_id_Channel` ASC) VISIBLE,
  INDEX `fk_user_has_channel_user_idx` (`user_id_User` ASC) VISIBLE,
  CONSTRAINT `fk_user_has_channel_user`
    FOREIGN KEY (`user_id_User`)
    REFERENCES `youtube`.`user` (`id_User`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_channel_channel1`
    FOREIGN KEY (`channel_id_Channel`)
    REFERENCES `youtube`.`channel` (`id_Channel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`comment` (
  `id_Comment` INT NOT NULL AUTO_INCREMENT,
  `text` VARCHAR(45) NOT NULL,
  `date` DATE NOT NULL,
  `user_id_User` INT NOT NULL,
  `likes` INT NOT NULL,
  `dislikes` INT NOT NULL,
  `like/dislike_id_Reaction` INT NOT NULL,
  PRIMARY KEY (`id_Comment`),
  INDEX `fk_comment_user1_idx` (`user_id_User` ASC) VISIBLE,
  INDEX `fk_comment_like/dislike1_idx` (`like/dislike_id_Reaction` ASC) VISIBLE,
  CONSTRAINT `fk_comment_user1`
    FOREIGN KEY (`user_id_User`)
    REFERENCES `youtube`.`user` (`id_User`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_like/dislike1`
    FOREIGN KEY (`like/dislike_id_Reaction`)
    REFERENCES `youtube`.`like/dislike` (`id_Reaction`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`playlists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`playlists` (
  `id_Playlists` INT NOT NULL AUTO_INCREMENT,
  `user` INT NOT NULL,
  `videos` INT NOT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`id_Playlists`),
  INDEX `user_idx` (`user` ASC) VISIBLE,
  INDEX `videos_idx` (`videos` ASC) VISIBLE,
  CONSTRAINT `user`
    FOREIGN KEY (`user`)
    REFERENCES `youtube`.`user` (`id_User`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `videos`
    FOREIGN KEY (`videos`)
    REFERENCES `youtube`.`video` (`id_Video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `youtube`.`video_has_comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `youtube`.`video_has_comment` (
  `video_id_Video` INT NOT NULL,
  `comment_id_Comment` INT NOT NULL,
  PRIMARY KEY (`video_id_Video`, `comment_id_Comment`),
  INDEX `fk_video_has_comment_comment1_idx` (`comment_id_Comment` ASC) VISIBLE,
  INDEX `fk_video_has_comment_video1_idx` (`video_id_Video` ASC) VISIBLE,
  CONSTRAINT `fk_video_has_comment_video1`
    FOREIGN KEY (`video_id_Video`)
    REFERENCES `youtube`.`video` (`id_Video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_has_comment_comment1`
    FOREIGN KEY (`comment_id_Comment`)
    REFERENCES `youtube`.`comment` (`id_Comment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
